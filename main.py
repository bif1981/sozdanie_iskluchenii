# Домашнее задание по теме "Создание исключений".
# Цель задания:
#
# Освоить механизмы создания и обработки исключений в Python.
# Научиться создавать собственные исключения, наследуя классы от Exception. Попрактиковаться в передаче исключений
# дальше по стеку вызовов.

# Задание:
#
# 1. Создайте новый проект или продолжите работу в текущем проекте.
# 2. Создайте минимум два своих собственных исключения, наследуя их от класса Exception. Например, InvalidDataException
# и ProcessingException.
# 3. Напишите функцию, которая генерирует различные исключения в зависимости от передаваемых ей аргументов.
# 4. Добавьте обработку исключений в функции, вызывающие вашу функцию, и передайте исключения дальше по стеку вызовов.
# 5. В основной части программы вызовите эти функции и корректно обработайте
#
# Комментарии к заданию:
#
# Важно понять разницу между обработкой исключений (блок try/except) и их генерацией (оператор raise).
# Дополнительно: попробуйте использовать блоки finally или else для дополнительных действий при обработке исключений.
# Обратите внимание на то, как исключения передаются по стеку вызовов и как это можно использовать для стратегии
# обработки ошибок в сложных программах.
# Важно!! Для передачи обработанных исключений в вызвавшую функцию, нужно вызывать raise.

def test():
    try:
        ...
    except MyException1 as e: # если случится это исключение, мы
        print(f"Ошибка: {e}") # передадим эту информацию в
        raise # вызвашую функцию

def test1():
    try:
        ...
    except MyException2 as e: # если случится это исключение,
        print(f"Внимание: {e}") # то вызвавшая функция не узнает, что произошло исключение